{"title":"vertical-align_line-height","date":"2019-09-03T07:08:10.000Z","updated":"2020-11-19T04:21:12.268Z","comments":true,"layout":"post","content":"<h1 id=\"诡异的vertical-align与line-height\"><a href=\"#诡异的vertical-align与line-height\" class=\"headerlink\" title=\"诡异的vertical-align与line-height\"></a>诡异的vertical-align与line-height</h1><p>在行内元素的对齐里面我们可以使用到<code>vertical-align</code>这个属性, 但是这个属性如果追根溯源的话可以说是玄之又玄, 日常中经常用到的图标和文字居中对齐以及图片下方会出现的幽灵空白现象都跟这个属性有关， 比较完整解释可以看这篇文章<a href=\"https://juejin.im/entry/58b51ab42f301e00576f21c6\">深入了解 CSS 字体度量，行高和 vertical-align</a></p>\n<p>先列出<code>vertical-align</code>的可用属性</p>\n<p><img src=\"./imgs/vertical-align.jpg\"></p>\n<ul>\n<li><code>vertical-align</code>本身就是一个相对属性, 那么参照物到底是谁, 这是个很关键的问题, 行内元素<code>vertical-align</code>对齐时参照的是<strong>父元素的基线</strong>, 那么父元素的基线在哪呢, 一是看不见摸不着, 二是这个基线是会变动位置的, 这就导致了这个属性很难彻底去理解, 也就是说<strong>行内元素的表现是会去影响父元素的基线位置, 然后这个基线位置的变化又会去影响行内其他元素的垂直位置</strong>, 牵一发而动全身的感觉.</li>\n</ul>\n<h2 id=\"如何确定行的基线的位置\"><a href=\"#如何确定行的基线的位置\" class=\"headerlink\" title=\"如何确定行的基线的位置\"></a>如何确定行的基线的位置</h2><h3 id=\"一种说法\"><a href=\"#一种说法\" class=\"headerlink\" title=\"一种说法\"></a>一种说法</h3><p>CSS官方文档中对于基线的位置有如下描述：</p>\n<blockquote>\n<p>The baseline of an ‘inline-block’ is the baseline of its last line box in the normal flow, unless it has either no in-flow line boxes or if its ‘overflow’ property has a computed value other than ‘visible’, in which case the baseline is the bottom margin edge.</p>\n</blockquote>\n<p>翻译过来就是</p>\n<blockquote>\n<p>‘inline-block’的基线是正常流中最后一个line box的基线, 除非，这个line box里面既没有line boxes或者本身’overflow’属性的计算值而不是’visible’, 这种情况下基线是margin底边缘。</p>\n</blockquote>\n<p>内联块元素的基线取决它包含的内容是否在文档流中:</p>\n<pre><code>- 在流内内容的情况下，内联块元素的基线是正常流中最后一个内容元素的基线（左边的例子）。对于这最后一个元素，它的基线是根据它自己的规则找到的。\n\n- 在流内内容但内联块元素有overflow:hidden属性的情况下，基线是内联块元素margin框的底部边缘（例如在中间）。\n\n- 在流外内容的情况下，基线是内联块元素margin框的底部边缘（例如在右边）。</code></pre>\n<h3 id=\"另一种说法\"><a href=\"#另一种说法\" class=\"headerlink\" title=\"另一种说法\"></a>另一种说法</h3><p>按照子元素中最高的那个元素去确定父元素基线位置</p>\n<p>其实我看了很多人的文章和博客，各有说法，对这个的理解反而很模糊了，<code>vertical-align</code>越来越迷幻了，希望尽量还是不要有用到它的场景吧，也许<code>flex</code>一把梭？</p>\n<h2 id=\"图标对齐\"><a href=\"#图标对齐\" class=\"headerlink\" title=\"图标对齐\"></a>图标对齐</h2><p>图标和文字一般都是内联元素， 默认情况下<code>vertical-align</code>都是<code>baseline</code>都对齐在父元素的基线位置上， 如果文字比图标大， 那么看起来就是文字要偏上， 但是二者的底部是对齐的， 如果需要文字和图标的中线对齐， 那么对文字和图标的<code>vertical-align</code>都设置为<code>middle</code>即可（注意<code>vertical-align</code>这个属性是不可继承的，所以设置在父元素上是对子元素是无效的）</p>\n<p>或者我们可以对图标使用<code>vertical-align</code>的数字单位，这样图标的位置就会相对当前位置进行上下偏移，也能做到图标近似与文字居中对齐</p>\n<h2 id=\"图片下方的幽灵空白\"><a href=\"#图片下方的幽灵空白\" class=\"headerlink\" title=\"图片下方的幽灵空白\"></a>图片下方的幽灵空白</h2><p>如果我们给文字加上背景色就会发现文字的下方其实也是有一定空白的，并不是文字底部直接贴着父元素的底边，图片可以类比于文字，在默认的<code>baseline</code>对齐方式下图片下方和父元素的底边也是有一定空白的， 如果需要这个空白， 那么可以设置图片的对齐方式为<code>middle</code>, 这样图片下方的空白就没有了</p>\n<h2 id=\"line-height\"><a href=\"#line-height\" class=\"headerlink\" title=\"line-height\"></a>line-height</h2><p><code>line-height</code>是一个可继承的属性, 它决定的就是当前行的高度,可选类型有<code>normal</code>,<code>number</code>,<code>length</code>,<code>%</code>和<code>inherit</code>这五种， 默认是<code>normal</code>(表示设置合理的行间距),设置例如<code>1.5</code>,<code>1.5em</code>,<code>150%</code>时，<code>1.5</code> 表示按照子元素在继承了这个<code>1.5</code>之后会与自己的<code>font-size</code>相乘得到最终的行高，而<code>1.5em</code>和<code>150%</code>表示在最初设置这个值得元素上计算得到具体行高之后就会原封不动的作用与下面的子元素（子元素不会重新计算行高）</p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><ul>\n<li><p><a href=\"https://juejin.im/entry/58b51ab42f301e00576f21c6\">深入了解 CSS 字体度量，行高和 vertical-align</a></p>\n</li>\n<li><p><a href=\"https://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/\">CSS深入理解vertical-align和line-height的基友关系</a></p>\n</li>\n<li><p><a href=\"https://www.zhangxinxu.com/wordpress/2010/05/%E6%88%91%E5%AF%B9css-vertical-align%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3%E4%B8%8E%E8%AE%A4%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/\">我对CSS vertical-align的一些理解与认识（一）</a></p>\n</li>\n<li><p><a href=\"https://juejin.im/post/5a7d6b886fb9a06349129463\">彻底搞定vertical-align垂直居中不起作用疑难杂症</a></p>\n</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"诡异的vertical-align与line-height\"><a href=\"#诡异的vertical-align与line-height\" class=\"headerlink\" title=\"诡异的vertical-align与line-height\"></a>诡异的vertical-align与line-height</h1><p>在行内元素的对齐里面我们可以使用到<code>vertical-align</code>这个属性, 但是这个属性如果追根溯源的话可以说是玄之又玄, 日常中经常用到的图标和文字居中对齐以及图片下方会出现的幽灵空白现象都跟这个属性有关， 比较完整解释可以看这篇文章<a href=\"https://juejin.im/entry/58b51ab42f301e00576f21c6\">深入了解 CSS 字体度量，行高和 vertical-align</a></p>\n<p>先列出<code>vertical-align</code>的可用属性</p>\n<p><img src=\"./imgs/vertical-align.jpg\"></p>\n<ul>\n<li><code>vertical-align</code>本身就是一个相对属性, 那么参照物到底是谁, 这是个很关键的问题, 行内元素<code>vertical-align</code>对齐时参照的是<strong>父元素的基线</strong>, 那么父元素的基线在哪呢, 一是看不见摸不着, 二是这个基线是会变动位置的, 这就导致了这个属性很难彻底去理解, 也就是说<strong>行内元素的表现是会去影响父元素的基线位置, 然后这个基线位置的变化又会去影响行内其他元素的垂直位置</strong>, 牵一发而动全身的感觉.</li>\n</ul>\n<h2 id=\"如何确定行的基线的位置\"><a href=\"#如何确定行的基线的位置\" class=\"headerlink\" title=\"如何确定行的基线的位置\"></a>如何确定行的基线的位置</h2><h3 id=\"一种说法\"><a href=\"#一种说法\" class=\"headerlink\" title=\"一种说法\"></a>一种说法</h3><p>CSS官方文档中对于基线的位置有如下描述：</p>\n<blockquote>\n<p>The baseline of an ‘inline-block’ is the baseline of its last line box in the normal flow, unless it has either no in-flow line boxes or if its ‘overflow’ property has a computed value other than ‘visible’, in which case the baseline is the bottom margin edge.</p>\n</blockquote>\n<p>翻译过来就是</p>\n<blockquote>\n<p>‘inline-block’的基线是正常流中最后一个line box的基线, 除非，这个line box里面既没有line boxes或者本身’overflow’属性的计算值而不是’visible’, 这种情况下基线是margin底边缘。</p>\n</blockquote>\n<p>内联块元素的基线取决它包含的内容是否在文档流中:</p>\n<pre><code>- 在流内内容的情况下，内联块元素的基线是正常流中最后一个内容元素的基线（左边的例子）。对于这最后一个元素，它的基线是根据它自己的规则找到的。\n\n- 在流内内容但内联块元素有overflow:hidden属性的情况下，基线是内联块元素margin框的底部边缘（例如在中间）。\n\n- 在流外内容的情况下，基线是内联块元素margin框的底部边缘（例如在右边）。</code></pre>\n<h3 id=\"另一种说法\"><a href=\"#另一种说法\" class=\"headerlink\" title=\"另一种说法\"></a>另一种说法</h3><p>按照子元素中最高的那个元素去确定父元素基线位置</p>\n<p>其实我看了很多人的文章和博客，各有说法，对这个的理解反而很模糊了，<code>vertical-align</code>越来越迷幻了，希望尽量还是不要有用到它的场景吧，也许<code>flex</code>一把梭？</p>\n<h2 id=\"图标对齐\"><a href=\"#图标对齐\" class=\"headerlink\" title=\"图标对齐\"></a>图标对齐</h2><p>图标和文字一般都是内联元素， 默认情况下<code>vertical-align</code>都是<code>baseline</code>都对齐在父元素的基线位置上， 如果文字比图标大， 那么看起来就是文字要偏上， 但是二者的底部是对齐的， 如果需要文字和图标的中线对齐， 那么对文字和图标的<code>vertical-align</code>都设置为<code>middle</code>即可（注意<code>vertical-align</code>这个属性是不可继承的，所以设置在父元素上是对子元素是无效的）</p>\n<p>或者我们可以对图标使用<code>vertical-align</code>的数字单位，这样图标的位置就会相对当前位置进行上下偏移，也能做到图标近似与文字居中对齐</p>\n<h2 id=\"图片下方的幽灵空白\"><a href=\"#图片下方的幽灵空白\" class=\"headerlink\" title=\"图片下方的幽灵空白\"></a>图片下方的幽灵空白</h2><p>如果我们给文字加上背景色就会发现文字的下方其实也是有一定空白的，并不是文字底部直接贴着父元素的底边，图片可以类比于文字，在默认的<code>baseline</code>对齐方式下图片下方和父元素的底边也是有一定空白的， 如果需要这个空白， 那么可以设置图片的对齐方式为<code>middle</code>, 这样图片下方的空白就没有了</p>\n<h2 id=\"line-height\"><a href=\"#line-height\" class=\"headerlink\" title=\"line-height\"></a>line-height</h2><p><code>line-height</code>是一个可继承的属性, 它决定的就是当前行的高度,可选类型有<code>normal</code>,<code>number</code>,<code>length</code>,<code>%</code>和<code>inherit</code>这五种， 默认是<code>normal</code>(表示设置合理的行间距),设置例如<code>1.5</code>,<code>1.5em</code>,<code>150%</code>时，<code>1.5</code> 表示按照子元素在继承了这个<code>1.5</code>之后会与自己的<code>font-size</code>相乘得到最终的行高，而<code>1.5em</code>和<code>150%</code>表示在最初设置这个值得元素上计算得到具体行高之后就会原封不动的作用与下面的子元素（子元素不会重新计算行高）</p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><ul>\n<li><p><a href=\"https://juejin.im/entry/58b51ab42f301e00576f21c6\">深入了解 CSS 字体度量，行高和 vertical-align</a></p>\n</li>\n<li><p><a href=\"https://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/\">CSS深入理解vertical-align和line-height的基友关系</a></p>\n</li>\n<li><p><a href=\"https://www.zhangxinxu.com/wordpress/2010/05/%E6%88%91%E5%AF%B9css-vertical-align%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3%E4%B8%8E%E8%AE%A4%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/\">我对CSS vertical-align的一些理解与认识（一）</a></p>\n</li>\n<li><p><a href=\"https://juejin.im/post/5a7d6b886fb9a06349129463\">彻底搞定vertical-align垂直居中不起作用疑难杂症</a></p>\n</li>\n</ul>\n","source":"_posts/vertical-align-line-height.md","full_source":"/Users/krics/workspace/kricsleo_site/source/_posts/vertical-align-line-height.md","path":"vertical-align-line-height/","permalink":"https://kricsleo.com/vertical-align-line-height/","photos":[],"link":""}